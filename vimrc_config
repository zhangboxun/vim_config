"Basics
set nocompatible        " must be first line
execute pathogen#infect()

set hidden
set nobackup
set noswapfile

set history=500
set undofile
set undolevels=500
set undoreload=500

set guifont=DejaVu\ Sans\ Mono\ Bold:h13

filetype plugin indent on
syntax on
"set colorcolumn=100

set shortmess+=filmnrxoOtT
set virtualedit=onemore

au BufWinLeave * silent! mkview      "make vim save view (state) (folds, cursor, etc)
au BufWinEnter * silent! loadview    "make vim load view (state) (folds, cursor, etc)


" Vim UI
set tabpagemax=15
set showmode

if has('cmdline_info')
    set ruler
    set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
    set showcmd
endif

if has('statusline')
    set laststatus=2
    " Broken down into easily includeable segments
    set statusline=%<%f\    " Filename
    set statusline+=%w%h%m%r " Options
    " set statusline+=%{fugitive#statusline()} "  Git Hotness
    set statusline+=\ [%{&ff}/%Y]            " filetype
    set statusline+=\ [%{getcwd()}]          " current dir
    "set statusline+=\ [A=\%03.3b/H=\%02.2B] " ASCII / Hexadecimal value of char
    set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif

set backspace=indent,eol,start  " backspace for dummys
set linespace=0
set number
set showmatch
hi MatchParen cterm=none ctermbg=none ctermfg=white
hi ColorColumn cterm=none ctermbg=none ctermfg=none
set incsearch
set hlsearch
set winminheight=0
set ignorecase
set smartcase
set wildmenu                    " show list instead of just completing
set wildmode=list:longest,full
set whichwrap=b,s,h,l,<,>,[,]   " backspace and cursor keys wrap to
set scrolljump=5                " lines to scroll when cursor leaves screen
set scrolloff=3                 " minimum lines to keep above and below cursor
set gdefault                    " the /g flag on :s substitutions by default
set list
set listchars=tab:>.,trail:.,extends:#,nbsp:. " Highlight problematic whitespace


" Formatting
set nowrap
set autoindent
set shiftwidth=4
set expandtab
set tabstop=4
set softtabstop=4
set pastetoggle=<F12>
autocmd FileType c,cpp,java,php,js,python,twig,xml,yml,R,tex autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))
autocmd FileType c,cpp,java,php,js,python,twig,xml,yml,R,tex setlocal nospell
autocmd FileType txt setlocal spell spelllang=en_us


" Key (re)Mappings
let mapleader = ','
nnoremap ; :
nnoremap j gj
nnoremap k gk

map <C-J> <C-W>j<C-W>_
map <C-K> <C-W>k<C-W>_
map <C-L> <C-W>l<C-W>_
map <C-H> <C-W>h<C-W>_

nnoremap j gj
nnoremap k gk

map <S-H> gT
map <S-L> gt

cmap W w
cmap WQ wq
cmap wQ wq
cmap Q q
cmap Tabe tabe
nmap <silent> <leader>/ :nohlsearch<CR>

cmap cwd lcd %:p:h
cmap cd. lcd %:p:h

vnoremap < <gv
vnoremap > >gv 

" Fix home and end keybindings for screen, particularly on mac
" - for some reason this fixes the arrow keys too. huh.
map [F $
imap [F $
map [H g0
imap [H g0

" For when you forget to sudo.. Really Write the file.
cmap w!! w !sudo tee % >/dev/null
